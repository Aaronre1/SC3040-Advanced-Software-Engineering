@page
@using System.Globalization
@using ASE3040.Web.Pages.Shared.Components.ConfirmationDialog
@model ASE3040.Web.Pages.Itinerary.Details

@{
    ViewData["Title"] = Model.Itinerary.Title;
    const string dateFormat = "dd MMM yyyy hh:mm tt";
}
<div class="d-flex justify-content-between align-items-center my-2 flex-wrap">
    <h2 class="me-auto mb-0 text-gray-800">
        <i class="fas fa-plane-departure"></i>
    </h2>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb float-end mb-0">
            <li class="breadcrumb-item">
                <a asp-page="Index">Itineraries</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </nav>
</div>

@if (!Model.ModelState.IsValid)
{
    @await Component.InvokeAsync("ValidationAlert")
}

<div class="my-3">
    <div class="d-flex justify-content-between align-items-end my-2 flex-wrap">
        <div>
            <h2 class="me-auto mb-0 text-gray-800">@ViewData["Title"]</h2>
            @if (Model.Itinerary.From.HasValue && Model.Itinerary.To.HasValue)
            {
                var from = Model.Itinerary.From.Value.ToString(dateFormat);
                var to = Model.Itinerary.To.Value.ToString(dateFormat);
                <div class="text-muted ms-1 mt-1">
                    <i class="far fa-calendar-alt"></i>
                    <span class="ms-1">@from</span>
                    <span class="ms-1"> - </span>
                    <span class="ms-1">@to</span>
                </div>
            }
        </div>

        <a class="btn py-0" data-bs-toggle="modal" data-bs-target="#editModal">
            Edit
        </a>
    </div>

    <hr/>
    @if (!string.IsNullOrEmpty(Model.Itinerary.Description))
    {
        <div class="alert alert-light" role="alert">
            <h5>
                <i class="far fa-sticky-note"></i>
                <span class="ms-1">Description</span>
            </h5>
            @Html.DisplayFor(x => x.Itinerary.Description)
        </div>
    }
    @if (Model.Itinerary.Budget.HasValue)
    {
        var expenses = Model.Itinerary.Expenses ?? 0;
        var budget = Model.Itinerary.Budget ?? 0;
        var remaining = budget - expenses;
        var percent = 0M;
        if (budget != 0)
        {
            percent = (expenses / budget) * 100;
        }
        var barColor = "bg-success";
        var barWidth = percent;
        if (percent > 100)
        {
            barWidth = 100;
            barColor = "bg-danger";
        }

        <div class="alert alert-light">
            <h5>
                <i class="fas fa-money-check-alt"></i>
                <span class="ms-1">Budget</span>
            </h5>
            <div class="progress" role="progressbar" aria-label="budget" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">
                <div class="progress-bar @barColor" style="width: @barWidth.ToString(CultureInfo.InvariantCulture)%">
                    @(percent.ToString("0.##"))%
                </div>
            </div>
            <div class="d-flex justify-content-between align-items-center my-2 flex-wrap">
                <div>
                    @(expenses.ToString("C"))
                    <span class="ms-1">spent / </span>
                    @(remaining.ToString("C"))
                    <span class="ms-1">remaining</span>
                </div>
                <div>
                    @(budget.ToString("C"))
                    <span class="ms-1"></span>
                </div>
            </div>
        </div>
    }
</div>

<div class="card mb-4">
    <div class="card-body">
        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createActivityModal" id="createActivityButton">Add Activity</button>
        <div class="table-responsive">
            <table id="IndexTable" class="table table-borderless">
                <thead>
                <tr>
                    <th></th>
                    <th>Title</th>
                    <th>Date</th>
                    <th class="text-end">Cost</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.Itinerary.Activities)
                {
                    <tr>
                        <td class="text-center">
                            <form method="post">
                                <button class="btn border-0 hover-check-circle" role="button"
                                        asp-page-handler="ToggleActivity"
                                        asp-route-id="@(item.Id.ToString())"
                                        asp-route-itineraryId="@(item.ItineraryId.ToString())">
                                    @if (item.Done)
                                    {
                                        <i class="fas fa-check-circle text-primary"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-circle"></i>
                                    }
                                </button>
                            </form>
                        </td>
                        <td>
                            <a style="border-bottom: 2px dotted; text-decoration: none" data-bs-toggle="offcanvas" href="#activityOffcanvas_@(item.Id.ToString())">
                                @Html.DisplayFor(x => item.Title)
                            </a>
                        </td>
                        <td>@(item.DateTime.ToString(dateFormat))</td>
                        <td class="text-end">
                            @(item.Cost.GetValueOrDefault().ToString("C"))
                        </td>
                        <td class="text-center">
                            <div class="btn-toolbar flex-nowrap" role="toolbar">
                                <div class="btn-group">
                                    <button class="btn border-0" role="button" data-bs-toggle="modal" data-bs-target="#editActivityModal_@(item.Id.ToString())">
                                        <i class="fas fa-pen text-primary"></i>
                                    </button>
                                </div>
                                <div class="btn-group">
                                    <button class="btn border-0" type="button" role="button" data-bs-toggle="modal" data-bs-target="#confirmationDialog_@(item.Id.ToString())">
                                        <i class="fa fa-trash icon text-danger"></i>
                                    </button>

                                </div>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true" aria-labelledby="editModalLabel">
    <div class="modal-dialog">
        <form class="modal-content" method="post" asp-page-handler="Edit">
            <div class="modal-header">
                <h3 class="modal-title fs-5" id="editModalLabel">Edit Itinerary</h3>
                <button type="button" class="btn btn-outline-secondary border-0" data-bs-dismiss="modal" aria-label="Close">
                    <i class="fas fa-times"></i>
                </button>
                <input asp-for="EditItinerary.Id" value="@Model.Itinerary.Id" hidden="hidden"/>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label asp-for="EditItinerary.Title">Title</label>
                    <input class="form-control" asp-for="EditItinerary.Title" value="@Model.Itinerary.Title">
                    <span asp-validation-for="EditItinerary.Title" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="EditItinerary.Budget">Budget ($)</label>
                    <input class="form-control" asp-for="EditItinerary.Budget" value="@Model.Itinerary.Budget">
                    <span asp-validation-for="EditItinerary.Budget" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="EditItinerary.Description">Description</label>
                    <textarea class="form-control" name="@Html.NameFor(x => x.EditItinerary.Description)">@Model.Itinerary.Description</textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="createActivityModal" tabindex="-1" aria-hidden="true" aria-labelledby="createActivityModalLabel">
    <div class="modal-dialog">
        <form class="modal-content needs-validation" method="post" asp-page-handler="CreateActivity">
            <div class="modal-header">
                <h3 class="modal-title fs-5" id="createActivityModalLabel">Add new activity</h3>
                <button type="button" class="btn btn-outline-secondary border-0" data-bs-dismiss="modal" aria-label="Close">
                    <i class="fas fa-times"></i>
                </button>
                <input asp-for="CreateActivity.ItineraryId" value="@Model.Itinerary.Id" hidden="hidden"/>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label asp-for="CreateActivity.Title">Title</label>
                    <input class="form-control" asp-for="CreateActivity.Title">
                    <span asp-validation-for="CreateActivity.Title" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="CreateActivity.DateTime">Date</label>
                    <input class="form-control" asp-for="CreateActivity.DateTime">
                    <span asp-validation-for="CreateActivity.DateTime" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="CreateActivity.Description">Description</label>
                    <textarea class="form-control" asp-for="CreateActivity.Description"></textarea>
                </div>
                <div class="mb-3">
                    <label asp-for="CreateActivity.Cost">Cost</label>
                    <input class="form-control" asp-for="CreateActivity.Cost">
                    <span asp-validation-for="CreateActivity.Cost" class="text-danger"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </form>
    </div>
</div>

@foreach (var item in Model.Itinerary.Activities)
{
    // Details
    <div class="offcanvas offcanvas-start" data-bs-scroll="true" tabindex="-1" id="activityOffcanvas_@(item.Id.ToString())">
        <div class="offcanvas-header bg-primary">
            <h2 class="offcanvas-title text-light">
                <i class="fas fa-map-marked-alt"></i>
                <span class="ms-1">@Html.DisplayFor(x => item.Title)</span>
            </h2>
            <button type="button" class="btn btn-outline-light border-0" data-bs-dismiss="offcanvas" aria-label="Close">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="offcanvas-body" style="background: rgb(248, 249, 252)">
            <div class="alert alert-light" role="alert">
                <h5>
                    <i class="far fa-calendar-alt"></i>
                    <span class="ms-1">@item.DateTime.ToString(dateFormat)</span>
                </h5>
            </div>
            @if (!string.IsNullOrEmpty(item.Description))
            {
                <div class="alert alert-light" role="alert">
                    <h5>
                        <i class="far fa-sticky-note"></i>
                        <span class="ms-1">Description</span>
                    </h5>
                    @Html.DisplayFor(x => item.Description)
                </div>
            }
            @if (item.Cost.HasValue)
            {
                <div class="alert alert-light" role="alert">
                    <h5>
                        <i class="fas fa-money-check-alt"></i>
                        <span class="ms-1">Cost</span>
                    </h5>
                    @item.Cost.Value.ToString("C")
                </div>
            }
            @if (item.LastModified.HasValue)
            {
                <div class="p-3" style="position: absolute; bottom: 0;">
                    <small>Last Modified @item.LastModified.Value.ToString(dateFormat)</small>
                </div>
            }
        </div>
    </div>

    // Edit
    <div class="modal fade" id="editActivityModal_@(item.Id.ToString())" tabindex="-1" aria-hidden="true" aria-labelledby="editActivityModalLabel_@(item.Id.ToString())">
        <div class="modal-dialog">
            <form class="modal-content needs-validation" method="post" asp-page-handler="EditActivity">
                <div class="modal-header">
                    <h3 class="modal-title fs-5" id="editActivityModalLabel_@(item.Id.ToString())">Edit Activity</h3>
                    <button type="button" class="btn btn-outline-secondary border-0" data-bs-dismiss="modal" aria-label="Close">
                        <i class="fas fa-times"></i>
                    </button>
                    <input asp-for="Itinerary.Id" hidden="hidden"/>
                    <input asp-for="EditActivity.Id" value="@item.Id" hidden="hidden"/>
                    <input name="@Html.NameFor(x => x.EditActivity.Done)" value="@item.Done.ToString()" hidden="hidden"/>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label asp-for="EditActivity.Title">Title</label>
                        <input class="form-control" asp-for="EditActivity.Title" value="@item.Title">
                        <span asp-validation-for="EditActivity.Title" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="EditActivity.DateTime">Date</label>
                        <input class="form-control" asp-for="EditActivity.DateTime" value="@item.DateTime.ToString("yyyy-MM-ddTHH:mm")">
                        <span asp-validation-for="EditActivity.DateTime" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="EditActivity.Description">Description</label>
                        <textarea class="form-control" name="@Html.NameFor(x => x.EditActivity.Description)">@item.Description</textarea>
                    </div>
                    <div class="mb-3">
                        <label asp-for="EditActivity.Cost">Cost</label>
                        <input class="form-control" asp-for="EditActivity.Cost" value="@item.Cost">
                        <span asp-validation-for="EditActivity.Cost" class="text-danger"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>

    // Delete
    @await Component.InvokeAsync("ConfirmationDialog", new ConfirmationDialogViewModel
           {
               Id = item.Id.ToString(),
               PageHandler = "DeleteActivity",
               Method = "post",
               Message = $"Delete '{item.Title}' from itinerary?",
               RouteValues =
               {
                   { "Id", item.Id.ToString() },
                   { "ItineraryId", item.ItineraryId.ToString() }
               }
           })
}


@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
    $(document).ready(function() {
      $('#IndexTable').DataTable({
        dom: '<"d-flex justify-content-between"<"#buttons">f>rtip',
        columnDefs: [
            { orderable: false, targets: [0, 4] },
        ],
        order: [[3, 'desc']],
        paging: false,
        buttons: [ 'copy' ]
      });
      
      $('#buttons').append($('#createActivityButton'));
    });
    </script>
}