@page
@using ASE3040.Application.Features.Itineraries.Queries
@model IndexModel
@{
    ViewData["Title"] = "Your Itineraries";
    const string dateFormat = "dd MMM yyyy hh:mm tt";
    const string dateOnlyFormat = "dd MMM yyyy";
}
@if (!Model.ModelState.IsValid)
{
    @await Component.InvokeAsync("ValidationAlert")
}
<div class="container my-3">
    <div class="d-flex justify-content-between align-items-end flex-wrap">
        <h2 class="mb-0 text-gray-800">@ViewData["Title"]</h2>
        <div>
            <a class="btn py-0" data-bs-toggle="modal" data-bs-target="#createModal">
                Add Activity
            </a>
        </div>
    </div>
    <hr/>
    <div class="row row-cols-1 row-cols-sm-2 g-3">
        @foreach (ItineraryDto item in Model.Itineraries)
        {
            <div class="col">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <a class="h5" style="border-bottom: 2px dotted; text-decoration: none;" asp-page="Details" asp-route-id="@(item.Id.ToString())">
                            @Html.DisplayFor(x => item.Title)
                        </a>
                        @if (item is { From: not null,To: not null })
                        {
                            <div class="text-muted mt-2">
                                <i class="far fa-calendar-alt fa-fw"></i>
                                <span class="ms-1">@item.From.Value.ToString(dateOnlyFormat)</span>
                                <span class="ms-1"> - </span>
                                <span class="ms-1">@item.To.Value.ToString(dateOnlyFormat)</span>
                            </div>
                        }
                        @if (!string.IsNullOrEmpty(item.Description))
                        {
                            <div class="mt-2">
                                <i class="far fa-sticky-note fa-fw"></i>
                                @Html.DisplayFor(x => item.Description)
                            </div>
                        }
                        @if (item.Budget.HasValue)
                        {
                            decimal expenses = item.Expenses ?? 0;
                            decimal budget = item.Budget ?? 0;
                            <div class="mt-2">
                                <i class="fas fa-money-check-alt fa-fw"></i>
                                @expenses.ToString("C") / @budget.ToString("C")
                            </div>
                        }
                        @if (item.LastModified.HasValue)
                        {
                            <div class="mt-2">
                                <small class="text-body-secondary">Last Modified @item.LastModified.Value.ToString(dateFormat)</small>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="createModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form class="modal-content needs-validation" method="post" asp-page-handler="Create">
            <div class="modal-header">
                <h3 class="modal-title fs-5" id="staticBackdropLabel">Create new itinerary</h3>
                <button type="button" class="btn btn-outline-secondary border-0" data-bs-dismiss="modal" aria-label="Close">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label asp-for="CreateInput.Title">Title</label>
                    <input class="form-control" asp-for="CreateInput.Title">
                    <span asp-validation-for="CreateInput.Title" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="CreateInput.Budget">Budget ($)</label>
                    <input class="form-control" asp-for="CreateInput.Budget">
                    <span asp-validation-for="CreateInput.Budget" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="CreateInput.Description">Description</label>
                    <textarea class="form-control" asp-for="CreateInput.Description"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
    $(document).ready(function() {
      $('#IndexTable').DataTable({
        columnDefs: [
            { orderable: false, targets: 7 }
        ]
      });
    });
    </script>
}