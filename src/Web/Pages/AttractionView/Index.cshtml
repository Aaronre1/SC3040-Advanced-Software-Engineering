@page
@model ASE3040.Web.Pages.AttractionView.IndexModel
@{
    ViewData["Title"] = "Attraction View page";
}

<style>
    #photo-container {
        margin-left: 10%;
        max-width: 1000px;
    }

    #photo-container img {
        padding: 40px 0px 40px 40px;
        width: 400px;
        height: 400px;
        margin: 10px;
    }

    .image-wrapper {
        padding: 10px;
        display: inline-block;
    }

    .image-wrapper button {
        display: block;
        margin-top: 10px;
        margin-left:45%;
    }

    #search-container {
        margin-left: 40%;
        position: relative;
        width: 20%;
    }

    #autocomplete {
        padding: 10px;
        padding-left: 30px;
        width: 100%;
    }

    #search-icon {
        position: absolute;
        left: 10px;
        top: 50%;
        transform: translateY(-50%);
        pointer-events: none;
        font-size: 18px;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
<div id="search-container">
    <i class="fa fa-search icon" id="search-icon"></i>
    <input id="autocomplete" placeholder="Enter a place" type="text" />
</div>

<div id="photo-container"></div>

<script>
    let autocomplete;
    function initAutocomplete() {
        autocomplete = new google.maps.places.Autocomplete(
            document.getElementById('autocomplete'),
            {
                type: ['establishment'],
                //componentRestrictions: { 'country': ['AU'] }, enable global
                fields: ['place_id', 'geometry', 'name', 'photos', 'rating', 'user_ratings_total', 'website','formatted_address','adr_address']
            });

        autocomplete.addListener("place_changed", onPlaceChanged);
    }
    

    document.getElementById("autocomplete").addEventListener("keydown", function (event) {
        if (event.key === "Enter") {
            event.preventDefault();
            fetchPlaceDetails();
        }
    });

    function fetchPlaceDetails() {
        const inputValue = document.getElementById("autocomplete").value;
        if (inputValue) {
            const placesService = new google.maps.places.PlacesService(document.createElement('div'));
            placesService.textSearch({ query: inputValue }, function (results, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK && results[0]) {
                    const request = {
                        placeId: results[0].place_id,
                        fields: ["name", "photos", "rating", "user_ratings_total", "website","formatted_address","adr_address"]
                    };

                    placesService.getDetails(request, function (place, status) {
                        if (status === google.maps.places.PlacesServiceStatus.OK) {
                            displayPhotos(place);
                        } else {
                            document.getElementById('photo-container').innerText("No Suggestions Available");
                        }
                    });
                }
            });
        }
    }

    function onPlaceChanged() {
        const place = autocomplete.getPlace();

        // Clear the previous photos if any
        const photoContainer = document.getElementById('photo-container');
        photoContainer.innerHTML = '';

        if (place.photos && place.photos.length > 0) {
            place.photos.forEach((photo) => {
                appendImageAndButton(photo, photoContainer,place.formatted_address);
            });
        }
    }

    function displayPhotos(place) {
        const photoContainer = document.getElementById('photo-container');
        photoContainer.innerHTML = '';

        if (place.photos && place.photos.length > 0) {
            place.photos.forEach((photo) => {
                appendImageAndButton(photo, photoContainer,place.formatted_address);
            });
        }
    }

    function appendImageAndButton(photo, photoContainer,address) {
        const imageDiv = document.createElement('div');
        imageDiv.className = 'image-wrapper';

        const photoUrl = photo.getUrl();
        const imgElement = document.createElement('img');
        imgElement.src = photoUrl;
        imgElement.alt = 'Loading...';

        const viewMoreButton = document.createElement('button');
        viewMoreButton.innerText = 'View More';
        viewMoreButton.onclick = function () {
            //get the address of the place
            alert(address);
        };

        imageDiv.appendChild(imgElement);
        imageDiv.appendChild(viewMoreButton);

        photoContainer.appendChild(imageDiv);
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDLZpSxv3MWYd3TjiebkoBE-3LPPui8jTE&libraries=places&callback=initAutocomplete" async defer>
</script>